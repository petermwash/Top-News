apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: "$project.rootDir/config/jacoco.gradle"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.pemwa.topnews"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        debug {
            debuggable true
            multiDexEnabled true

            //add tests coverage using Jacoco
            testCoverageEnabled true

            // Importing the ApiKey into the project
            buildConfigField 'String', "ApiKey", project.hasProperty('NewsApp_ApiKey') ? NewsApp_ApiKey : System.getenv('NewsApp_ApiKey')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            //add tests coverage using Jacoco
            testCoverageEnabled false

            // Importing the ApiKey into the project
            buildConfigField 'String', "ApiKey", project.hasProperty('NewsApp_ApiKey') ? NewsApp_ApiKey : System.getenv('NewsApp_ApiKey')
        }
    }
    //Enable the coverage report for unit test
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        animationsDisabled = false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Support libraries
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    // Android KTX
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // Coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // Moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // ViewModel and LiveData (arch components)
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"

    // Navigation
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    // Material design components
    implementation "com.google.android.material:material:$material_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Room database
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"

    // android Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
}
